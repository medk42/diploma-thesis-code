import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
from matplotlib import cm

# Points after initialization of the problem

point_sets_all = {
    'Automatic initialization': [
        {
                'name': '92',
                'points': np.array([
                        [-0.0065, 0.0065, 0],
                        [0.0065, 0.0065, 0],
                        [0.0065, -0.0065, 0],
                        [-0.0065, -0.0065, 0]
                ])
        },
        {
                'name': '93',
                'points': np.array([
                        [-0.0112844, 0.00705242, -0.0160643],
                        [-0.0109948, 0.00687594, -0.00306871],
                        [-0.010821, -0.00612165, -0.00324909],
                        [-0.0111105, -0.00594517, -0.0162447]
                ])
        },
        {
                'name': '94',
                'points': np.array([
                        [0.00496195, 0.00786015, -0.0212669],
                        [-0.00803012, 0.00778436, -0.0208192],
                        [-0.00795338, -0.00521538, -0.0207928],
                        [0.00503869, -0.0051396, -0.0212404]
                ])
        },
        {
                'name': '95',
                'points': np.array([
                        [0.00985426, 0.00685967, -0.00250189],
                        [0.0100917, 0.00697104, -0.0154992],
                        [0.00996841, -0.00602788, -0.0156129],
                        [0.00973095, -0.00613925, -0.00261553]
                ])
        },
        {
                'name': '96',
                'points': np.array([
                        [0.00299662, 0.0366752, 0.00268532],
                        [0.0122883, 0.0368775, -0.00640442],
                        [0.0124834, 0.0238793, -0.00649424],
                        [0.00319173, 0.023677, 0.00259549]
                ])
        },
        {
                'name': '97',
                'points': np.array([
                        [-0.0140686, 0.0367766, -0.00588564],
                        [-0.00462494, 0.0368371, 0.00304825],
                        [-0.00447748, 0.0238381, 0.00298043],
                        [-0.0139211, 0.0237776, -0.00595346]
                ])
        },
        {
                'name': '98',
                'points': np.array([
                        [-0.0061885, 0.0376068, -0.0221125],
                        [-0.0148656, 0.0375717, -0.0124323],
                        [-0.0147729, 0.0245721, -0.0123963],
                        [-0.0060958, 0.0246072, -0.0220766]
                ])
        },
        {
                'name': '99',
                'points': np.array([
                        [0.00872746, 0.0373373, -0.0136129],
                        [-0.00102184, 0.0374891, -0.0222111],
                        [-0.000997234, 0.0244916, -0.0224684],
                        [0.00875207, 0.0243399, -0.0138702]
                ])
        }
    ],

    'After Ceres optimization (start with automatic)': [
        {
                'name': '92',
                'points': np.array([
                        [-0.0065, 0.0065, 0],
                        [0.0065, 0.0065, 0],
                        [0.0065, -0.0065, 0],
                        [-0.0065, -0.0065, 0]
                ])
        },
        {
                'name': '93',
                'points': np.array([
                        [-0.0105849, 0.0067598, -0.0164824],
                        [-0.0102332, 0.00660165, -0.00348812],
                        [-0.0100497, -0.00639603, -0.00365127],
                        [-0.0104013, -0.00623788, -0.0166456]
                ])
        },
        {
                'name': '94',
                'points': np.array([
                        [0.00615587, 0.00716843, -0.0210452],
                        [-0.00683244, 0.00717432, -0.0204941],
                        [-0.0068308, -0.00582448, -0.0203168],
                        [0.00615751, -0.00583036, -0.0208679]
                ])
        },
        {
                'name': '95',
                'points': np.array([
                        [0.0100856, 0.0067479, -0.0040759],
                        [0.00928665, 0.00690724, -0.0170503],
                        [0.0091802, -0.00609142, -0.0172034],
                        [0.00997918, -0.00625077, -0.00422898]
                ])
        },
        {
                'name': '96',
                'points': np.array([
                        [0.00261826, 0.0362102, 0.00139191],
                        [0.0116251, 0.0364196, -0.00797999],
                        [0.0118068, 0.0234214, -0.00809582],
                        [0.00279989, 0.023212, 0.00127608]
                ])
        },
        {
                'name': '97',
                'points': np.array([
                        [-0.0120824, 0.036362, -0.00713938],
                        [-0.00266262, 0.0364485, 0.00181944],
                        [-0.00248939, 0.0234498, 0.00176282],
                        [-0.0119092, 0.0233633, -0.00719601]
                ])
        },
        {
                'name': '98',
                'points': np.array([
                        [-0.00375303, 0.0370151, -0.0223732],
                        [-0.0125512, 0.0369834, -0.0128029],
                        [-0.012455, 0.0239839, -0.0127575],
                        [-0.00365677, 0.0240156, -0.0223278]
                ])
        },
        {
                'name': '99',
                'points': np.array([
                        [0.0110313, 0.036787, -0.0135319],
                        [0.00147959, 0.0369252, -0.0223492],
                        [0.001534, 0.0239279, -0.0226118],
                        [0.0110857, 0.0237897, -0.0137945]
                ])
        }
    ],

    'After Python optimization': [
        {'name': '92', 'points': np.array([[-0.006304999813437462, -0.02319500409066677, 0.005999999586492777], [0.006304999813437462, -0.02319500409066677, 0.005999999586492777], [0.006304999813437462, -0.03580499812960625, 0.005999999586492777], [-0.006304999813437462, -0.03580499812960625, 0.005999999586492777]])},
        {'name': '93', 'points': np.array([[-0.010180287162014284, -0.023025471538594248, -0.010248563882502273], [-0.010037825930782191, -0.023114751718252804, 0.0023917282590791415], [-0.010002540795482594, -0.03567626228858573, 0.0023236086371863267], [-0.010095408197741457, -0.03557689156228057, -0.010246557437808885]])},
        {'name': '94', 'points': np.array([[0.006464379349319675, -0.022939485834709294, -0.014081374115414423], [-0.006184294375868268, -0.022754468376354368, -0.014063522206791381], [-0.006275620998783746, -0.035337037201089216, -0.013850530137574405], [0.006271147300497602, -0.03549540669296916, -0.013920076906622478]])},
        {'name': '95', 'points': np.array([[0.010061888266859604, -0.02301186551472819, 0.0023336844454131854], [0.009968791586705704, -0.022870260529235166, -0.010351670665790177], [0.009890165411628403, -0.03543258539493575, -0.010389635395770529], [0.010041424513811445, -0.0355723150668316, 0.0021400346613742248]])},
        {'name': '96', 'points': np.array([[0.0025644699933757473, 0.006075522374534772, 0.007320123260618004], [0.01148180307541383, 0.00623296239759109, -0.0016938078370470025], [0.01170246062205695, -0.006483909590580579, -0.001830122195842509], [0.0026878964250683186, -0.00670603364272558, 0.0072040002862544285]])},
        {'name': '97', 'points': np.array([[-0.011789689727290473, 0.006064874024151978, -0.0012346903027998662], [-0.0025980146686824567, 0.0062684418853272235, 0.0075856140394216535], [-0.0025204661334480172, -0.006486084269380576, 0.007655165891964896], [-0.01154128576253336, -0.006617908378375044, -0.001344200725753106]])},
        {'name': '98', 'points': np.array([[-0.002720900765059924, 0.006494350616510976, -0.01594504982988736], [-0.011593921096096511, 0.006658012342951863, -0.0068078201780441905], [-0.011684375274714264, -0.006066760607096182, -0.006668212107671974], [-0.002806040644921744, -0.006215523979908639, -0.015736029110952825]])},
        {'name': '99', 'points': np.array([[0.01145782772059723, 0.006272436361701712, -0.007145876735704383], [0.0024443519690295575, 0.006394902789887538, -0.016077309617670985], [0.002287002160915742, -0.00632954421407647, -0.01599601526013219], [0.011330703403387144, -0.006415900643214856, -0.007112042503035634]])}
    ],

    'After Ceres optimization (start with optimal)': [
        {
                'name': '92',
                'points': np.array([
                        [-0.0065, 0.0065, 0],
                        [0.0065, 0.0065, 0],
                        [0.0065, -0.0065, 0],
                        [-0.0065, -0.0065, 0]
                ])
        },
        {
                'name': '93',
                'points': np.array([
                        [-0.0105244, 0.00670813, -0.0165104],
                        [-0.0102621, 0.00668353, -0.00351309],
                        [-0.0101886, -0.00631623, -0.00353917],
                        [-0.0104509, -0.00629163, -0.0165365]
                ])
        },
        {
                'name': '94',
                'points': np.array([
                        [0.00635705, 0.00693243, -0.0207407],
                        [-0.00663595, 0.00702564, -0.0203245],
                        [-0.00672372, -0.00597294, -0.0201535],
                        [0.00626928, -0.00606615, -0.0205697]
                ])
        },
        {
                'name': '95',
                'points': np.array([
                        [0.0098609, 0.00664159, -0.00367949],
                        [0.00935667, 0.00671389, -0.0166695],
                        [0.00935948, -0.00628591, -0.016742],
                        [0.0098637, -0.00635821, -0.00375196]
                ])
        },
        {
                'name': '96',
                'points': np.array([
                        [0.00293638, 0.0363569, 0.00159462],
                        [0.0119519, 0.0363899, -0.00777119],
                        [0.0119825, 0.02339, -0.00778763],
                        [0.00296695, 0.0233569, 0.00157818]
                ])
        },
        {
                'name': '97',
                'points': np.array([
                        [-0.0119395, 0.03642, -0.00725985],
                        [-0.00243457, 0.0364434, 0.00160894],
                        [-0.00238542, 0.0234435, 0.0015906],
                        [-0.0118904, 0.0234201, -0.00727818]
                ])
        },
        {
                'name': '98',
                'points': np.array([
                        [-0.00341838, 0.0369036, -0.0224289],
                        [-0.0121641, 0.0369422, -0.0128107],
                        [-0.0121861, 0.0239423, -0.0127785],
                        [-0.00344042, 0.0239037, -0.0223967]
                ])
        },
        {
                'name': '99',
                'points': np.array([
                        [0.0113094, 0.036676, -0.0135986],
                        [0.00184829, 0.0366973, -0.0225142],
                        [0.00184525, 0.0236973, -0.022542],
                        [0.0113063, 0.023676, -0.0136264]
                ])
        }
    ],

    'After Ceres optimization (start with automatic, SoftLOneLoss(1))': [
        {
                'name': '92',
                'points': np.array([
                        [-0.0065, 0.0065, 0],
                        [0.0065, 0.0065, 0],
                        [0.0065, -0.0065, 0],
                        [-0.0065, -0.0065, 0]
                ])
        },
        {
                'name': '93',
                'points': np.array([
                        [-0.0107315, 0.00683284, -0.016369],
                        [-0.010369, 0.00666516, -0.00337511],
                        [-0.0101633, -0.00633206, -0.00354857],
                        [-0.0105258, -0.00616438, -0.0165424]
                ])
        },
        {
                'name': '94',
                'points': np.array([
                        [0.00604588, 0.00720462, -0.0208393],
                        [-0.00694459, 0.00722696, -0.0203421],
                        [-0.00696166, -0.0057723, -0.0202041],
                        [0.00602881, -0.00579464, -0.0207013]
                ])
        },
        {
                'name': '95',
                'points': np.array([
                        [0.00985341, 0.00678814, -0.00385627],
                        [0.00914098, 0.00695827, -0.0168356],
                        [0.00910248, -0.00604059, -0.0170039],
                        [0.00981491, -0.00621071, -0.00402454]
                ])
        },
        {
                'name': '96',
                'points': np.array([
                        [0.00257381, 0.0362848, 0.00168362],
                        [0.0116517, 0.0365337, -0.00761856],
                        [0.0118497, 0.0235361, -0.00777298],
                        [0.00277186, 0.0232872, 0.0015292]
                ])
        },
        {
                'name': '97',
                'points': np.array([
                        [-0.0122112, 0.036407, -0.0069914],
                        [-0.00275494, 0.0364852, 0.00192896],
                        [-0.00256789, 0.0234868, 0.00184461],
                        [-0.0120242, 0.0234086, -0.00707574]
                ])
        },
        {
                'name': '98',
                'points': np.array([
                        [-0.00382634, 0.0370458, -0.0221898],
                        [-0.0126222, 0.0370175, -0.0126173],
                        [-0.0125258, 0.0240179, -0.0125672],
                        [-0.00372991, 0.0240463, -0.0221397]
                ])
        },
        {
                'name': '99',
                'points': np.array([
                        [0.0109396, 0.0368317, -0.0133738],
                        [0.00142221, 0.0369572, -0.0222283],
                        [0.00146161, 0.0239592, -0.0224548],
                        [0.010979, 0.0238338, -0.0136003]
                ])
        }
    ]


}

for name in point_sets_all:
    point_sets = point_sets_all[name]
    # Create figure
    fig = plt.figure(figsize=(10, 8))
    ax = fig.add_subplot(111, projection='3d')

    # Plot each point set
    n_indexes = len(point_sets)
    cmap = cm.get_cmap('jet')
    colors = [cmap(i / (n_indexes - 1)) for i in range(n_indexes)]

    mins = np.ones(3) * 100000
    maxs = np.ones(3) * -100000

    for i, point_set in enumerate(point_sets):
        # Plot points
        ax.plot(point_set['points'][:, 0], point_set['points'][:, 1], point_set['points'][:, 2],
                    color=colors[i])
        ax.scatter(point_set['points'][:, 0], point_set['points'][:, 1], point_set['points'][:, 2],
                    color=colors[i], label=point_set['name'])
        ax.scatter(point_set['points'][0, 0], point_set['points'][0, 1], point_set['points'][0, 2],
                color=colors[i], s=60, marker='X')
        
        mins = np.min(np.stack((np.min(point_set['points'], axis=0), mins)), axis=0)
        maxs = np.max(np.stack((np.max(point_set['points'], axis=0), maxs)), axis=0)
        
        # Add text labels for each point
        for j, point in enumerate(point_set['points']):
            ax.text(point[0], point[1], point[2], f"{point_set['name']}\nPoint {j+1}",
                    size=8, zorder=1, color=colors[i])

    print(mins)
    print(maxs)

    mids = (maxs + mins) / 2
    ranges = maxs - mins
    max_range = np.max(ranges)
    mins = mids - max_range
    maxs = mids + max_range

    # Set axis limits and labels
    ax.set_xlim(mins[0], maxs[0])
    ax.set_ylim(mins[1], maxs[1])
    ax.set_zlim(mins[2], maxs[2])
    ax.set_xlabel('X')
    ax.set_ylabel('Y')
    ax.set_zlabel('Z')
    ax.set_title(name)
    ax.set_aspect('equal')
    ax.legend()

# Show the plot
plt.show()